# -*- coding: utf-8 -*-
"""AnayaBryan_S4C2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-vIDohmIWX82yUc6BFJHhuWmoWcHo0Mz
"""

import numpy as np
import matplotlib.pylab as plt
from scipy.fftpack import fft,ifft,fftfreq

N = 128 # number of point in the whole interval
f = 200.0 # frequency in Hz
dt = 1 / (f * 32 ) #32 samples per unit frequency
t = np.linspace( 0, (N-1)*dt, N)
y = np.cos(2 * np.pi * f * t) - 0.4 * np.sin(2 * np.pi * (2*f) * t )+ 0.17*np.sin(2 * np.pi * (15*f) * t )

plt.figure()
plt.plot(t,y,label='Se√±al')
plt.show()

def fourier(x):
	N = x.shape[0]
	n = np.arange(N)
	x_n = np.array(0)
	for k in range(N):
	    x_n = np.append(x_n,np.sum(x*np.exp(-1j*2*np.pi*k*n/N)))
	return x_n[1:]

print(fourier(y)[:10])
print(fft(y)[:10])
print(y[:10])
#np.size(t)
print(np.size(fft(y)))
print(np.size(fourier(y)))

y_f = fourier(y)
y_l = fft(y)/N
freq = fftfreq(N,d=dt)

fig1 = plt.figure(figsize=(15,8))
ax1 = fig1.add_subplot(121)
ax2 = fig1.add_subplot(122)

ax1.plot(freq,np.abs(y_f),label='Fourier Funct')
ax1.plot(freq,np.abs(y_l),label='Fourier Lib')
ax1.set_title('Fourier(freq)')
ax1.legend()

ax2.plot(np.abs(y_f),label='Fourier Funct')
ax2.plot(np.abs(y_l),label='Fourier Lib')
ax2.set_title('Fourier')
ax2.legend()

plt.legend()
plt.show()

