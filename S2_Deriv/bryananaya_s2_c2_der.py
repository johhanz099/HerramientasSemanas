# -*- coding: utf-8 -*-
"""BryanAnaya_S2_C2_der.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c_B9ARgNKUEodP4IisCB7SuMguuG1_15
"""

import numpy as np
import matplotlib.pylab as plt

## Derivación numérica
#1) y' = ( y(t+h)-y(t) ) / h or ( y(t+h/2)-y(t-h/2) ) / h
#2) y''= ( y(t+h)+y(t-h)-2y(t) ) / h**2

def function_cos(x):
    y = np.cos(x)
    return y

#1a)
def forward_difference(x,y):
    yt = y[:-1]
    yf = y[1:]
    df = x[1]-x[0]
    sup = (yf-yt)/df
    return sup

x = np.linspace(0,2*np.pi,100)
y = function_cos(x)

y_fd = forward_difference(x,y)
#print(y_fd)

#1b)
def central_difference(x,y):
    y_bef = y[:-2]
    y_cen = y[1:-1]
    y_aft = y[2:]
    df = x[1]-x[0]
    sup = (y_aft - y_bef)/df
    return sup

y_cd = central_difference(x,y)  
#print(y_cd)

