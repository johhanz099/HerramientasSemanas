# -*- coding: utf-8 -*-
"""AnayaBryan_S3C1_EG.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17pMSFXT3jZ7OvwGaEqcj2giMmp7Mb5Tq
"""

import numpy as np
import matplotlib.pylab as plt

# Instrucciones figuras

#plt.figure()
#f, (ax1, ax2) = plt.subplots(1,2, sharey=False) #sharey: para que no/s√≠ sean los mismos ejes 'y' de los ax_i
#ax1.plot()
#plt.savefig()
#plt.close()

# np.sum([::2])

# np.linalg.solve()

# Sistemas de ecuaciones lineales
N = 6
A = (np.random.random((N,N))*10.0)-5.0
B = (np.random.random((N,1))*10.0)-5.0

def Elim_Gauss(A,B):
  for i in range(A.shape[0]):
    B[i] = B[i]/A[i,i]
    A[i,:] = A[i,:]/A[i,i]
    for j in range(i+1,A.shape[1]):
      B[j] = B[j] - B[i]*A[j,i]
      A[j,:] = A[j,:] - A[i,:]*A[j,i]
  return A,B

A_g,B_g = Elim_Gauss(A,B)

A_g,B_g



